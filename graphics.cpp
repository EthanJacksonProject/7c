#include "graphics.h"
#include "map.h"
#include "globals.h"

#define YELLOW 0xFFFF00
#define BROWN  0xD2691E
#define DIRT   BROWN
#define OceanLight 0x7fcdff
#define OceanDark 0x064273

#define darkGrey 0x3A3A3A
#define BoatBrown 0x5E2A0E
#define BoatTan 0xFFC18C
#define Post 0xF4A460
#define sand 0xfaea63
#define gold 0xffdf00
#define PirateBrown 0xce8d4d
#define Boots 0x615a52
#define Outer 0xff767676
#define Inner 0xff252525

int player[121] = {0xffffcd7f, 0xffffcd7f, 0xff305f7c, 0xffb0b0b0, 0xffb0b0b0, 0xffb0b0b0, 0xffb0b0b0, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xff305f7c, 0xffb0b0b0, 0xffb0b0b0, 0xffb0b0b0, 0xffb0b0b0, 0xffb0b0b0, 0xffb0b0b0, 0xffb0b0b0, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xff305f7c, 0xffb0b0b0, 0xffb0b0b0, 0xffb0b0b0, 0xffb0b0b0, 0xffb0b0b0, 0xffb0b0b0, 0xffb0b0b0, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xff305f7c, 0xff305f7c, 0xffffcd7f, 0xffffcd7f, 0xffb0b0b0, 0xffb0b0b0, 0xffb0b0b0, 0xffb0b0b0, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xff305f7c, 0xff305f7c, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xff305f7c, 0xff305f7c, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xff0e2a5e, 0xff0e2a5e, 0xff305f7c, 0xff305f7c, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xffffcd7f, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xffffcd7f};
void draw_player(int u, int v, int key){
    if(get_active_map() == get_map(0))){
    int colors[11*11];
    for (int i = 0; i < 11*11; i++)
    {
        if (player[i] == 0xff8cc1ff) colors[i] = BoatTan;
        else if (player[i] == 0xffb0b0b0) colors[i] = darkGrey;
        else if (player[i] == 0xff0e2a5e) colors[i] = BoatBrown;
        else if (player[i] == 0xff305f7c) colors[i] = Post;
        else if (player[i] == 0xffffcd7f) colors[i] = OceanLight;
        else continue;
    }
    uLCD.BLIT(u, v, 11, 11, colors);
    wait_us(250); // Recovery time!
    }
    if(get_active_map() == (get_map(1))){
    int colors[11*11];
    for (int i = 0; i < 11*11; i++)
    {
        if (player[i] == 0xff8cc1ff) colors[i] = Post;
        else if (player[i] == 0xffb0b0b0) colors[i] = Post;
        else if (player[i] == 0xff0e2a5e) colors[i] = Post;
        else if (player[i] == 0xff305f7c) colors[i] = Post;
        else if (player[i] == 0xffffcd7f) colors[i] = Post;
        else continue;
    }
    uLCD.BLIT(u, v, 11, 11, colors);
    wait_us(250); // Recovery time!
    }

}

void draw_img(int u, int v, const char* img)
{
    int colors[11*11];
    for (int i = 0; i < 11*11; i++)
    {
        if (img[i] == 'R') colors[i] = RED;
        else if (img[i] == 'Y') colors[i] = YELLOW;
        else if (img[i] == 'G') colors[i] = GREEN;
        else if (img[i] == 'D') colors[i] = DIRT;
        else if (img[i] == '5') colors[i] = LGREY;
        else if (img[i] == '3') colors[i] = DGREY;
        else colors[i] = BLACK;
    }
    uLCD.BLIT(u, v, 11, 11, colors);
    wait_us(250); // Recovery time!
}

void draw_nothing(int u, int v)
{
    if(get_active_map() == (get_map(0))){
        uLCD.filled_rectangle(u, v, u+10, v+10, OceanLight);
    }
    if(get_active_map() == (get_map(1))){
        uLCD.filled_rectangle(u, v, u+10, v+10, darkGrey);
    }
}

void draw_wall(int u, int v)
{
    if(get_active_map() == (get_map(0))){
        uLCD.filled_rectangle(u, v, u+10, v+10, OceanDark);
    }
    if(get_active_map() == (get_map(1))){
        uLCD.filled_rectangle(u, v, u+10, v+10, BLACK);
    }
}

void draw_plant(int u, int v) {
    int islands[121] = {0xffffcd7f, 0xff23dbab, 0xff23dbab, 0xffffcd7f, 0xffffcd7f, 0xff23dbab, 0xffffcd7f, 0xff23dbab, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xff23dbab, 0xffffcd7f, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xff23dbab, 0xffffcd7f, 0xffffcd7f, 0xff23dbab, 0xff4d8dce, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xff4d8dce, 0xff4d8dce, 0xffffcd7f, 0xffffcd7f, 0xff23dbab, 0xff23dbab, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xff4d8dce, 0xff4d8dce, 0xffffcd7f, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xff4d8dce, 0xff4d8dce, 0xffffcd7f, 0xffffcd7f, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xff4d8dce, 0xff4d8dce, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xff23dbab, 0xff23dbab, 0xffffcd7f, 0xffffcd7f, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff4d8dce, 0xff4d8dce, 0xff4d8dce, 0xff4d8dce, 0xff4d8dce, 0xff4d8dce, 0xff4d8dce, 0xff4d8dce, 0xff4d8dce, 0xff4d8dce, 0xff4d8dce, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa};   
    int colors[11*11];
    for (int i = 0; i < 11*11; i++)
    {
        if (islands[i] == 0xffffcd7f) colors[i] = OceanLight;
        else if (islands[i] == 0xff23dbab) colors[i] = GREEN;
        else if (islands[i] == 0xff4d8dce) colors[i] = PirateBrown;
        else if (islands[i] == 0xff63eafa) colors[i] = sand;
        else if (islands[i] == 0xffffffff) colors[i] = WHITE;
        else if (islands[i] == 0xff00dfff) colors[i] = gold;
        else continue;
    }
    uLCD.BLIT(u, v, 11, 11, colors);
    wait_us(250); // Recovery time!
}

void draw_upper_status()
{
    // Draw bottom border of status bar
    uLCD.line(0, 9, 127, 9, OceanLight);
    
    // Add other status info drawing code here
}

void draw_lower_status()
{
    // Draw top border of status bar
    uLCD.line(0, 118, 128, 118, OceanLight);
    
    // Add other status info drawing code here
    
}

void draw_border()
{
    uLCD.filled_rectangle(0,     9, 127,  14, WHITE); // Top
    uLCD.filled_rectangle(0,    13,   2, 114, WHITE); // Left
    uLCD.filled_rectangle(0,   114, 127, 117, WHITE); // Bottom
    uLCD.filled_rectangle(124,  14, 127, 117, WHITE); // Right
}

void draw_npc(int u, int v)
{
    int pirate[121] = {0xffffcd7f, 0xff23dbab, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xff23dbab, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xff23dbab, 0xffffcd7f, 0xff23dbab, 0xffffcd7f, 0xff23dbab, 0xffffcd7f, 0xff23dbab, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xff23dbab, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xff000000, 0xff000000, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xff4d8dce, 0xffffcd7f, 0xffffcd7f, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xff4d8dce, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffffff, 0xffffffff, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xff4d8dce, 0xffffcd7f, 0xff00dfff, 0xff00dfff, 0xff4d8dce, 0xff4d8dce, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xff4d8dce, 0xffffcd7f, 0xff00dfff, 0xff00dfff, 0xff525a61, 0xff525a61, 0xffffcd7f, 0xffffcd7f, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff4d8dce, 0xff4d8dce, 0xff4d8dce, 0xff4d8dce, 0xff4d8dce, 0xff4d8dce, 0xff4d8dce, 0xff4d8dce, 0xff4d8dce, 0xff4d8dce, 0xff4d8dce, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa};
    int colors[11*11];
    for (int i = 0; i < 11*11; i++)
    {
        if (pirate[i] == 'R') colors[i] = RED;
        else if (pirate[i] == 0xffffcd7f) colors[i] = OceanLight;
        else if (pirate[i] == 0xff23dbab) colors[i] = GREEN;
        else if (pirate[i] == 0xff4d8dce) colors[i] = PirateBrown;
        else if (pirate[i] == 0xff63eafa) colors[i] = sand;
        else if (pirate[i] == 0xffffffff) colors[i] = WHITE;
        else if (pirate[i] == 0xff00dfff) colors[i] = gold;
        else colors[i] = BLACK;
    }
    uLCD.BLIT(u, v, 11, 11, colors);
    wait_us(250); // Recovery time!
}

void draw_cave(int u, int v)
{
    int cave[121] = {0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xff767676, 0xff767676, 0xff767676, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xff767676, 0xff767676, 0xff767676, 0xff767676, 0xff767676, 0xff767676, 0xff767676, 0xffffcd7f, 0xffffcd7f, 0xffffcd7f, 0xff767676, 0xff767676, 0xff767676, 0xff252525, 0xff252525, 0xff252525, 0xff767676, 0xff767676, 0xff767676, 0xffffcd7f, 0xffffcd7f, 0xff767676, 0xff767676, 0xff252525, 0xff252525, 0xff252525, 0xff252525, 0xff252525, 0xff767676, 0xff767676, 0xffffcd7f, 0xffffcd7f, 0xff767676, 0xff767676, 0xff252525, 0xff252525, 0xff252525, 0xff252525, 0xff252525, 0xff767676, 0xff767676, 0xffffcd7f, 0xff767676, 0xff767676, 0xff252525, 0xff252525, 0xff252525, 0xff252525, 0xff252525, 0xff252525, 0xff252525, 0xff767676, 0xff767676, 0xff767676, 0xff767676, 0xff252525, 0xff252525, 0xff252525, 0xff252525, 0xff252525, 0xff252525, 0xff252525, 0xff767676, 0xff767676, 0xff767676, 0xff767676, 0xff252525, 0xff252525, 0xff252525, 0xff252525, 0xff252525, 0xff252525, 0xff252525, 0xff767676, 0xff767676, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff23dbab, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa, 0xff63eafa};
    int colors[11*11];
    for (int i = 0; i < 11*11; i++)
    {
        if (cave[i] == 'R') colors[i] = RED;
        else if (cave[i] == 0xffffcd7f) colors[i] = OceanLight;
        else if (cave[i] == 0xff23dbab) colors[i] = GREEN;
        else if (cave[i] == 0xff63eafa) colors[i] = sand;
        else if (cave[i] == 0xff767676) colors[i] = Outer;
        else if (cave[i] == 0xff252525) colors[i] = Inner;
        else colors[i] = BLACK;
    }
    uLCD.BLIT(u, v, 11, 11, colors);
    wait_us(250); // Recovery time!
}

void draw_good_idol(int u, int v) {
    int GoodIdol[121] = {0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff00dfff, 0xff00dfff, 0xff00dfff, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff00dfff, 0xff00dfff, 0xff2323db, 0xff00dfff, 0xff00dfff, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff00dfff, 0xff00dfff, 0xff2323db, 0xff2323db, 0xff2323db, 0xff00dfff, 0xff00dfff, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff00dfff, 0xff00dfff, 0xff2323db, 0xff00dfff, 0xff00dfff, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff00dfff, 0xff3a3a3a, 0xff00dfff, 0xff00dfff, 0xff00dfff, 0xff3a3a3a, 0xff00dfff, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff00dfff, 0xff00dfff, 0xff2323db, 0xff00dfff, 0xff00dfff, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff00dfff, 0xff3a3a3a, 0xff00dfff, 0xff00dfff, 0xff00dfff, 0xff3a3a3a, 0xff00dfff, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff00dfff, 0xff00dfff, 0xff2323db, 0xff00dfff, 0xff00dfff, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff00dfff, 0xff00dfff, 0xff2323db, 0xff2323db, 0xff2323db, 0xff00dfff, 0xff00dfff, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff3a3a3a, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e};
    int colors[11*11];
    for (int i = 0; i < 11*11; i++)
    {
        if (GoodIdol[i] == 0xff3a3a3a) colors[i] = darkGrey ;
        else if (GoodIdol[i] == 0xff2323db) colors[i] = RED;
        else if (GoodIdol[i] == 0xff00dfff) colors[i] = gold;
        else if (GoodIdol[i] == 0xff0e2a5e) colors[i] = DIRT;
        else continue;
    }
    uLCD.BLIT(u, v, 11, 11, colors);
    wait_us(250); // Recovery time!
}

void draw_bad_idol(int u, int v) {
    int BadIdol[121] = {0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff00dfff, 0xff00dfff, 0xff00dfff, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff00dfff, 0xff00dfff, 0xff60a4f4, 0xff00dfff, 0xff00dfff, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff00dfff, 0xff00dfff, 0xff60a4f4, 0xff60a4f4, 0xff60a4f4, 0xff00dfff, 0xff00dfff, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff00dfff, 0xff00dfff, 0xff60a4f4, 0xff00dfff, 0xff00dfff, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff00dfff, 0xff3a3a3a, 0xff00dfff, 0xff00dfff, 0xff00dfff, 0xff3a3a3a, 0xff00dfff, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff00dfff, 0xff00dfff, 0xff60a4f4, 0xff00dfff, 0xff00dfff, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff00dfff, 0xff3a3a3a, 0xff00dfff, 0xff00dfff, 0xff00dfff, 0xff3a3a3a, 0xff00dfff, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff00dfff, 0xff00dfff, 0xff60a4f4, 0xff00dfff, 0xff00dfff, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff00dfff, 0xff00dfff, 0xff60a4f4, 0xff60a4f4, 0xff60a4f4, 0xff00dfff, 0xff00dfff, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff3a3a3a, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e};
    int colors[11*11];
    for (int i = 0; i < 11*11; i++)
    {
        if (BadIdol[i] == 0xff3a3a3a) colors[i] = darkGrey ;
        else if (BadIdol[i] == 0xff60a4f4) colors[i] = Post ;
        else if (BadIdol[i] == 0xff00dfff) colors[i] = gold;
        else if (BadIdol[i] == 0xff0e2a5e) colors[i] = DIRT;
        else continue;
    }
    uLCD.BLIT(u, v, 11, 11, colors);
    wait_us(250); // Recovery time!
}

void draw_no_idol(int u, int v) {
    int NoIdol[121] = {0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff3a3a3a, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e};
    int colors[11*11];
    for (int i = 0; i < 11*11; i++)
    {
        if (NoIdol[i] == 0xff3a3a3a) colors[i] = darkGrey ;
        else if (NoIdol[i] == 0xff60a4f4) colors[i] = Post ;
        else if (NoIdol[i] == 0xff00dfff) colors[i] = gold;
        else if (NoIdol[i] == 0xff0e2a5e) colors[i] = DIRT;
        else continue;
    }
    uLCD.BLIT(u, v, 11, 11, colors);
    wait_us(250); // Recovery time!
}

void draw_Chest(int u, int v) {
    int Chest[121] = {0xff3a3a3a, 0xff3a3a3a, 0xff0e2a5e, 0xff00dfff, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff00dfff, 0xff0e2a5e, 0xff3a3a3a, 0xff3a3a3a, 0xff3a3a3a, 0xff0e2a5e, 0xff0e2a5e, 0xff00dfff, 0xff00dfff, 0xff00dfff, 0xff00dfff, 0xff00dfff, 0xff0e2a5e, 0xff0e2a5e, 0xff3a3a3a, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff00dfff, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff00dfff, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff00dfff, 0xff00dfff, 0xff00dfff, 0xff00dfff, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff00dfff, 0xff00dfff, 0xff00dfff, 0xff00dfff, 0xff00dfff, 0xff00dfff, 0xff00dfff, 0xff00dfff, 0xff00dfff, 0xff00dfff, 0xff00dfff, 0xff00dfff, 0xff00dfff, 0xff00dfff, 0xff00dfff, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff60a4f4, 0xff60a4f4, 0xff0e2a5e, 0xff60a4f4, 0xff60a4f4, 0xff60a4f4, 0xff0e2a5e, 0xff60a4f4, 0xff60a4f4, 0xff0e2a5e, 0xff0e2a5e, 0xff60a4f4, 0xff60a4f4, 0xff0e2a5e, 0xff60a4f4, 0xff60a4f4, 0xff60a4f4, 0xff0e2a5e, 0xff60a4f4, 0xff60a4f4, 0xff0e2a5e, 0xff0e2a5e, 0xff60a4f4, 0xff60a4f4, 0xff0e2a5e, 0xff60a4f4, 0xff60a4f4, 0xff60a4f4, 0xff0e2a5e, 0xff60a4f4, 0xff60a4f4, 0xff0e2a5e, 0xff0e2a5e, 0xff60a4f4, 0xff60a4f4, 0xff0e2a5e, 0xff60a4f4, 0xff60a4f4, 0xff60a4f4, 0xff0e2a5e, 0xff60a4f4, 0xff60a4f4, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e, 0xff0e2a5e};
    int colors[11*11];
    for (int i = 0; i < 11*11; i++)
    {
        if (Chest[i] == 0xff3a3a3a) colors[i] = OceanLight;
        else if (Chest[i] == 0xff0e2a5e) colors[i] = BoatBrown;
        else if (Chest[i] == 0xff00dfff) colors[i] = gold;
        else if (Chest[i] == 0xff0e2a5e) colors[i] = Post;
        else continue;
    }
    uLCD.BLIT(u, v, 11, 11, colors);
    wait_us(250); // Recovery time!
}


